# 3/28/2017 Edits (Tao): I've read through the models designed by Edison and Hyun Ji, and here are the formatted models amended to further satisty the requirements and meet the convensions of Django models

# 2017-Apr-04 Edits (Geraldine): many minor edits
# removed shopping cart (too similar to transaction) and changed transaction to only have one game at a time
# don't think there's any reason to group games bought at the same time together and it makes database management and writing views easie
# Things that can be added if we have time: screenshots, system requirements, game version, game language

# 4/3/2017 Edits (Tao): Finalized (sort of) version. Now the path of uploaded images will be automatically processed by function file_rename. 
# Every attribute that I can't think of a proper default value (especially ForeignKey) is set to be null-able because other wise Django won't let me migrate. Protection logic should be implemented at a higher level.
# To avoid confusion, Transaction.datetime renamed to purchase_datetime, Member.recommended renames to puechased_games
# Major modification to Reward. Added expiry_date back. How can the upper-level logic determine whether a reward is expired if you don't record the expiry date in the first place?
# removed Tag.count Difficult to update. We can count the ForeignKeys connected to the Tag everytime by Tag.member_tag_set.count()
# WARNING: Game.platforms turned into ManyToManyField, views should prevent duplication
# WARNING: views should prevent duplicated Game.title, Member.username, Admin.username

	
Admin:
	id			#Auto created by Django, auto increment, same for all id below
	username
	password

Publisher:
	id
	name

Genre:
	id
	text

Platform:
	id
	text

Game:
	id
	title
	price			# 1 decimal point
	score			# range from 0.0 to 10.0
	description_short
	description_long
	release_date
	image_large		# ImageField
	image_small		# ImageField
	publisher		# ForeignKey to Publisher
	genre			# ForeignKey to Genre
	platforms		# ManyToManyField to Platform

Member:
	id			
	username
	email
	password
	screen_name
	avatar 			# As ImageField
	acc_spending
	purchased_games		# ManyToManyKey to Game

Transaction:
	id
	game			# ForeignKey to Game
	member			# ForeignKey to Member
	platforms		# ForeignKey to Platform
	price			# before discounts and rewards
	rewards_used
	is_purchased		# BooleanField
	purchase_datetime

Tag:
	id
	name
	games			# ManyToManyKey to Game

MemberTag:			# relational database between Tag and Member
	id
	tag			# ForeignKey to Tag
	member			# ForeignKey to Member

Review:
	id
	body
	score
	likes
	dislikes
	member			# ForeignKey to Member
	game			# ForeignKey to Game

Reward:
	id
	award_date
	expiry_date
	status			# active, expired, used
	member			# ForeignKey to Member
	transaction		# ForeignKey to Transaction (if used) 
